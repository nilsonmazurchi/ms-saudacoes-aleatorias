name: CI/CD - Saudações Aleatórias

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

env:
  DOCKER_USER: ozorest84
  SERVICE_NAME: saudacoes-aleatorias

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Go Fmt & Vet
        run: |
          echo "Linting code..."
          go fmt $(go list ./...)
          go vet $(go list ./...)

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          args: --verbose

  test:
    name: Test Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Run tests and generate report
        run: |
          echo "Running tests and generating report..."
          # CGO_ENABLED=1 é necessário se houver código C, mas requer gcc.
          # A imagem ubuntu-latest já tem o gcc.
          CGO_ENABLED=1 gotestsum --junitfile report.xml --format testname

  build-and-push:
    name: Build and Push Docker Image
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # Essencial para builds multi-plataforma (ex: ARM em runners x86)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # Cria um builder do Docker que suporta builds multi-plataforma

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }} # Segredo configurado no GitHub

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          DOCKER_IMAGE_NAME: ${{ env.DOCKER_USER }}/ms-${{ env.SERVICE_NAME}}
          DOCKER_IMAGE_TAG: 1.0.${{ github.run_id }}
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
